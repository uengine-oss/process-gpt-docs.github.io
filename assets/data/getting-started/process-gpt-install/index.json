{"hash":"f33138896fcbe3328ea5ba5a0f23d3c29dcaede5","data":{"markdownPage":{"id":"5e894867153f61763b1abd8e48bd5d41","title":"로컬 설치 가이드","description":"","path":"/getting-started/process-gpt-install/","timeToRead":2,"content":"<h1 id=\"로컬-설치-가이드\"><a href=\"#%EB%A1%9C%EC%BB%AC-%EC%84%A4%EC%B9%98-%EA%B0%80%EC%9D%B4%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>로컬 설치 가이드</h1>\n<h2 id=\"개요\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>개요</h2>\n<p>이는 로컬 Kubernetes/Kind cluster에서 Process-GPT를 실행하는 방법에 대한 간단한 가이드입니다.</p>\n<h2 id=\"필수-조건\"><a href=\"#%ED%95%84%EC%88%98-%EC%A1%B0%EA%B1%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>필수 조건</h2>\n<ul>\n<li>Docker</li>\n<li>kubectl</li>\n<li>kind</li>\n</ul>\n<h2 id=\"프로젝트-준비\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%80%EB%B9%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>프로젝트 준비</h2>\n<p><a href=\"https://github.com/uengine-oss/process-gpt\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>에서 Process-GPT 프로젝트를 클론합니다:</p>\n<pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">git</span> clone https://github.com/uengine-oss/process-gpt.git\n<span class=\"token builtin class-name\">cd</span> process-gpt</code></pre>\n<h2 id=\"설치-및-실행\"><a href=\"#%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%8B%A4%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>설치 및 실행</h2>\n<p><strong>1. 필요한 도구 설치</strong></p>\n<pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># Install and run Docker Desktop</span>\n<span class=\"token function\">docker</span> <span class=\"token parameter variable\">--version</span>\n\n<span class=\"token comment\"># Install kubectl</span>\n<span class=\"token comment\"># https://kubernetes.io/docs/tasks/tools/install-kubectl/</span>\n\n<span class=\"token comment\"># Install kind (Mac)</span>\nbrew <span class=\"token function\">install</span> kind\n\n<span class=\"token comment\"># Install kind (Windows)</span>\ncurl.exe <span class=\"token parameter variable\">-Lo</span> kind.exe https://kind.sigs.k8s.io/dl/v0.20.0/kind-windows-amd64</code></pre>\n<br>\n<p><strong>2. Cluster 생성</strong></p>\n<pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># Mac</span>\nkind create cluster <span class=\"token parameter variable\">--name</span> process-gpt\n\n<span class=\"token comment\"># Windows</span>\n.<span class=\"token punctuation\">\\</span>kind.exe create cluster <span class=\"token parameter variable\">--name</span> process-gpt</code></pre>\n<br>\n<p><strong>3. 구성 파일 업데이트(필수)</strong></p>\n<p><code>secrets.yaml</code> 을 실제 값으로 편집하세요 :</p>\n<pre class=\"language-sh\"><code class=\"language-sh\">OPENAI_API_KEY: <span class=\"token string\">\"sk-your-actual-openai-key\"</span>\nSUPABASE_KEY: <span class=\"token string\">\"your-actual-supabase-anon-key\"</span>\nSERVICE_ROLE_KEY: <span class=\"token string\">\"your-actual-supabase-service-role-key\"</span>\nJWT_SECRET: <span class=\"token string\">\"your-actual-jwt-secret\"</span>\nDB_NAME: <span class=\"token string\">\"your-db-name\"</span>\nDB_USER: <span class=\"token string\">\"your-db-user\"</span>\nDB_PASSWORD: <span class=\"token string\">\"your-db-password\"</span>\nDB_HOST: <span class=\"token string\">\"your-db-host\"</span>\nDB_PORT: <span class=\"token string\">\"your-db-port\"</span>\nSMTP_PASSWORD: <span class=\"token string\">\"your-smtp-password\"</span>\nLANGSMITH_API_KEY: <span class=\"token string\">\"your-langsmith-api-key\"</span>\nLANGSMITH_PROJECT: <span class=\"token string\">\"your-langsmith-project\"</span>\nMEM_ZERO_API_KEY: <span class=\"token string\">\"your-mem-zero-api-key\"</span>\nPERPLEXITY_API_KEY: <span class=\"token string\">\"your-perplexity-api-key\"</span>\n<span class=\"token comment\"># Google Cloud settings: contents of credentials.json for the google-credentials secret</span></code></pre>\n<p><code>configmap.yaml</code> 을 실제 값으로 편집하세요 :</p>\n<pre class=\"language-sh\"><code class=\"language-sh\">SUPABASE_URL: <span class=\"token string\">\"https://your-project.supabase.co\"</span>\nSMTP_PORT: <span class=\"token string\">\"587\"</span>\nSMTP_SERVER: <span class=\"token string\">\"smtp.gmail.com\"</span>\nSMTP_USERNAME: <span class=\"token string\">\"your-smtp-username\"</span></code></pre>\n<br>\n<p><strong>4. 배치 순서</strong></p>\n<pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># Step 1: Deploy core configuration files (required)</span>\nkubectl apply <span class=\"token parameter variable\">-f</span> secrets.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> configmap.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> secrets-test.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> configmap-test.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> rbac.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> pvc.yaml\n\n<span class=\"token comment\"># Step 2: Deploy all deployments and services</span>\nkubectl apply <span class=\"token parameter variable\">-f</span> deployments/\nkubectl apply <span class=\"token parameter variable\">-f</span> services/</code></pre>\n<br>\n<p><strong>5. 상태 확인</strong></p>\n<pre class=\"language-sh\"><code class=\"language-sh\">kubectl get pods\nkubectl get services\nkubectl get secrets\nkubectl get configmaps</code></pre>\n<br>\n<p><strong>6. 애플리케이션에 접속하세요</strong></p>\n<pre class=\"language-sh\"><code class=\"language-sh\">kubectl port-forward service/frontend-service <span class=\"token number\">3000</span>:5173</code></pre>\n<p>브라우저를 열고 <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000</a> 으로 이동하세요.</p>\n<h2 id=\"파일-설명\"><a href=\"#%ED%8C%8C%EC%9D%BC-%EC%84%A4%EB%AA%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>파일 설명</h2>\n<p><strong>핵심 구성 파일:</strong></p>\n<ul>\n<li><code>secrets.yaml</code>: 민감한 값(API 키, DB 자격 증명, JWT 비밀) - 실제 값으로 업데이트해야 합니다.</li>\n<li><code>configmap.yaml</code>: 공개 구성 값(예: Supabase URL) - 실제 값으로 업데이트해야 합니다.</li>\n<li><code>rbac.yaml</code>: MCP 프록시(역할 기반 액세스 제어)에 대한 서비스 계정 권한입니다.\n-<code>pvc.yaml</code>: LangChain 캐싱을 위한 영구 볼륨 클레임.</li>\n</ul>\n<p><strong>배포  파일:</strong></p>\n<ul>\n<li><code>deployments/</code>: 모든 애플리케이션에 대한 배포 구성.</li>\n<li><code>services/</code>: 모든 서비스에 대한 네트워킹 구성.</li>\n</ul>\n","sidebar":"getting-started","headings":[{"depth":1,"value":"로컬 설치 가이드","anchor":"#로컬-설치-가이드"},{"depth":2,"value":"개요","anchor":"#개요"},{"depth":2,"value":"필수 조건","anchor":"#필수-조건"},{"depth":2,"value":"프로젝트 준비","anchor":"#프로젝트-준비"},{"depth":2,"value":"설치 및 실행","anchor":"#설치-및-실행"},{"depth":2,"value":"파일 설명","anchor":"#파일-설명"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/advanced-features/voice-chat/","title":"음성 기반 ProcessGPT"}},{"node":{"path":"/advanced-features/process-marketplace/","title":"마켓플레이스"}},{"node":{"path":"/advanced-features/simulation/","title":"프로세스 시뮬레이션 & 피드백 수정"}},{"node":{"path":"/advanced-features/multi-agent/","title":"멀티 에이전트"}},{"node":{"path":"/advanced-features/","title":"주요 기능"}},{"node":{"path":"/advanced-features/ai-chat-guide/","title":"AI 기반 음성 채팅"}},{"node":{"path":"/advanced-features/browser-use/","title":"Browser Use 에이전트"}},{"node":{"path":"/advanced-features/agent-knowledge/","title":"에이전트 지식관리"}},{"node":{"path":"/advanced-features/admin-guide/","title":"프로세스 컨설팅 AI 및 관리"}},{"node":{"path":"/advanced-features/a2a-system/","title":"A2A"}},{"node":{"path":"/tutorial/tutorial-lv4/","title":"ERP 데이터 연동을 통한 재고 관리"}},{"node":{"path":"/tutorial/tutorial-lv3/","title":"조건 분기 설정과 피드백 반영"}},{"node":{"path":"/tutorial/tutorial-lv2/","title":"AI 에이전트를 활용한 제안서 작성"}},{"node":{"path":"/tutorial/","title":"프로세스 생성과 실행"}},{"node":{"path":"/getting-started/process-gpt-install/","title":"로컬 설치 가이드"}},{"node":{"path":"/getting-started/","title":"Process-GPT 소개"}}]}},"context":{}}